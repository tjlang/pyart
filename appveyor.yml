environment:

  CONDA_PATH: "C:\\Miniconda"

  matrix:
    - PYTHON_VERSION: "2.7"

    - PYTHON_VERSION: "3.7"

platform:
    - x64

install:
  # Use the pre-installed Miniconda for the desired arch
  - ps: if($env:PLATFORM -eq 'x64')
          { $env:CONDA_PATH="$($env:CONDA_PATH)-x64" }
  - ps: $env:path="$($env:CONDA_PATH);$($env:CONDA_PATH)\Scripts;$($env:CONDA_PATH)\Library\bin;C:\cygwin\bin;$($env:PATH)"
  # Debugging
  #- "SET PATH"
  #- "python --version"
  #- "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  #- "conda info"
  #- "conda list"

  # Create and activate a conda environment with the desired Python version
  - "conda update --yes --quiet conda"
  - "conda config --set changeps1 no"
  - "conda config --add channels conda-forge"
  - "conda config --add channels conda-forge"
  - "conda create --yes --quiet -n matrix_env python=%PYTHON_VERSION%"
  - "activate matrix_env"

  # Install Py-ART dependecies
  - "conda install -y -q numpy scipy matplotlib netcdf4 pytest pytest-cov cython cartopy xarray"

  # Check that we have the expected version and architecture for Python
  # in the conda environment
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - "conda list"

  # build Py-ART
  - "pip install -e ."

build: false

test_script:
  # run the unit tests
  - "if \"%PYTHON_VERSION%\"==\"2.7\" (pytest -v --cov pyart --ignore pyart/util)"
  - "if \"%PYTHON_VERSION%\"==\"3.7\" (pytest -v --cov pyart)"
